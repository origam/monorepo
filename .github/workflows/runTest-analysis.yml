name: "RunTests"

on:
  push:
    branches: [ 20* ]
  pull_request:
    branches: [ 20* ]

jobs:

  frontend:
    name: frontend
    runs-on: windows-2019
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp']
        node-version: [14.x]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: setup node
      uses: actions/setup-node@v2
      with:
       node-version: '14'
     
    - name: Install Yarn
      run: npm install -g yarn
      
    - name: Build Frontend
      run: |
        cd frontend-html
        yarn -version
        node --version
        yarn --frozen-lockfile
        yarn build

    - name: Upload frontend artifact
      uses: actions/upload-artifact@v2
      with:
        name: htmlfrontendbuild
        path: "frontend-html/dist"   

    
  analyze:
    needs: frontend
    name: Analyze
    runs-on: windows-2022
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1

    - name: Build Html Server
      run: |
       cd backend
       msbuild Origam.sln -t:restore /p:Configuration="Release Server"
       msbuild Origam.sln -t:build /p:Configuration="Release Server" /t:Server\Origam_Server:Publish -v:m
       msbuild Origam.sln -t:build /p:Configuration="Release Server" /t:Workflow\Origam_WorkflowTests:Publish -v:m
       
    - name: Upload server artifact
      uses: actions/upload-artifact@v2
      with:
        name: htmlserverbuild
        path: "backend/Origam.Server/bin/Release/net6.0/publish"

    - name: Upload workflow integration tests artifact
      uses: actions/upload-artifact@v2
      with:
        name: workflowbuild
        path: "backend/Origam.WorkflowTests/bin/Release Server/net6.0/publish"
        
  compose:
    needs: analyze
    name: Compose
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp']
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download HTML5 artifact
      uses: actions/download-artifact@v2
      with:
        name: htmlserverbuild
        path: test/HTML5
        
    - name: Download Frontend artifact
      uses: actions/download-artifact@v2
      with:
        name: htmlfrontendbuild
        path: test/HTML5/clients/origam

    - name: Download workflow integration tests artifact
      uses: actions/download-artifact@v2
      with:
        name: workflowbuild
        path: test/HTML5_TESTS
        
    - name: Copy model to test directory
      run: |
        mkdir test/model
        cp -r model-tests test/model
        
    - name: Start containers
      run: |
        cd test
        docker-compose --env-file envFile.env -f "docker-compose.yml" --profile test up --abort-on-container-exit 

    - name: Stop containers
      if: always()
      run: |
        cd test
        docker-compose --env-file envFile.env -f "docker-compose.yml" --profile test down

